#!/usr/bin/env bash
set -xe

source_region=eu-central-1
system=$(nix eval --raw nixpkgs#system)

AMIS_FILE=../amis.json
NEW_AMIS=$(mktemp)
printf "{}" > $NEW_AMIS

for release in "stable" "unstable"; do 
    ami_path="ami-$release-$system"

    nix build ".#ami-$release" --out-link $ami_path

    # Upload the AMI to the default region
    terraform apply -input=false -no-color -auto-approve \
      -var="system=$system" \
      -var="ami_path=$ami_path"

    ami_id=$(terraform output -raw ami-id)

    regions=$(aws --region $source_region ec2 describe-regions --query 'Regions[].{Name:RegionName}' --output text)
    for region in $regions; do
       aws ec2 copy-image \
            --source-region $source_region \
            --source-image-id $ami_id \
            --region $region \
            --name cachix-deploy \
         | jq --arg ami_name "$release.$region.$system" \
              --slurp \
              '.[1][($ami_name)] = .[0].ImageId | .[1]' - $NEW_AMIS \
         | sponge $NEW_AMIS
    done
done

cp $NEW_AMIS "amis-$system.json"
