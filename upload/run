#!/usr/bin/env bash
set -xe

source_region=eu-central-1
system=$(nix eval --raw nixpkgs#system)

AMIS_FILE=../amis.json
NEW_AMIS=$(mktemp)
printf "{}" > $NEW_AMIS

for release in "stable" "unstable"; do 
    nix build ".#ami-$release" --out-link ami-$release-$system

    terraform apply -var="release=$release" -var="system=$system" -auto-approve
    ami=$(terraform output -raw ami-id)

    regions=$(aws --profile cachix-engineering --region $source_region ec2 describe-regions --query 'Regions[].{Name:RegionName}' --output text)
    for region in $regions; do
       aws --profile cachix-engineering ec2 copy-image \
            --source-region $source_region \
            --source-image-id $ami \
            --region $region \
            --name cachix-deploy | jq --slurp '.[1][env.release + "." + env.region + "." env.system] = .[0].ImageId | .[1]' - $NEW_AMIS | sponge $NEW_AMIS
    done
done

# Update the AMI file with the new AMIs
jq -s '.[0] * .[1]' $AMIS_FILE $NEW_AMIS | sponge $AMIS_FILE
